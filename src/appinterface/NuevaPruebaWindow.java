/*
 * Lucia Calzado Piedrabuena
 * Trabajo de Fin de Grado - Grado en Ingenier�a Inform�tica
 * Universidad de Castilla-La Mancha
 */
package appinterface;

import auxiliar.AuxiliarMethods;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JList;
import objects.Alumno;
import controladores.ControladorAlumno;
import controladores.ControladorCompetencia;
import controladores.ControladorPrueba;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.DefaultListSelectionModel;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import objects.Competencia;
import objects.Nota;
import objects.Opciones;
import objects.Prueba;

/**
 *
 * @author lucia
 */
public class NuevaPruebaWindow extends javax.swing.JFrame {

    /**
     * Creates new form NuevaTareaWindow
     */
    ControladorAlumno contAlumnos;
    ControladorPrueba contPruebas;
    ControladorCompetencia contCompetencias;
    int asignatura;
    Opciones opciones;
    boolean presionado; //boolean para saber si el txt de la fecha se ha presionado o no en un determinado momento
    DefaultListModel<String> modeloAsig = new DefaultListModel<>();
    HashMap<String, Integer> competenciaConID = new HashMap<>(); //nombre competencia, id

    public NuevaPruebaWindow(String strAsignatura, int asignatura, ControladorAlumno contAlumnos, ControladorPrueba contPruebas, ControladorCompetencia contCompetencias, Opciones opciones) {
        initComponents();
        this.contAlumnos = contAlumnos;
        this.asignatura = asignatura;
        this.opciones = opciones;

        presionado = false;
        competenciaConID = new HashMap<>();

        //asignamos los modelos de las listas
        listaComAsig.setModel(modeloAsig);

        //para que el panel de descripción se ajuste al texto que contiene
        descripcion.setWrapStyleWord(true);
        descripcion.setLineWrap(true);
        descripcion.setEditable(false);

        //ajustamos los paneles que contienen las listas
        jPanel1.setMinimumSize(jPanel1.getSize());
        jPanel1.setPreferredSize(new Dimension(300, jPanel1.getPreferredSize().height));

        //cargar competencias si viene vacío el controlador
        if (contCompetencias != null) {
            this.contCompetencias = contCompetencias;
            //cargarCompetencias();
        } else {
            this.contCompetencias = new ControladorCompetencia();
            cargarCompetencias();
        }

        //cargar pruebas si viene vacío el controlador
        if (contPruebas != null) {
            this.contPruebas = contPruebas;
        } else {
            this.contPruebas = new ControladorPrueba();
            try {
                this.contPruebas.cargarPruebasAsignatura(asignatura);
            } catch (SQLException e) {
                AuxiliarMethods.showWarning(e.toString());
            }
        }
        cargarTabla();

        //ajustamos la tabla para que se muestre correctamente al inicio
        tabla.setEnabled(false);
        seleccionarTodaTabla(true);

        ejecutarOpciones();

        getDate();

        //Añadir los radio buttons a un grupo
        ButtonGroup cursosGrupo = new ButtonGroup();
        cursosGrupo.add(rdbtnSeleccionar);
        cursosGrupo.add(rdbtnTodos);

        txtAsignatura.setText(strAsignatura);
        //lblImagen1.setIcon(new ImageIcon("assets/plus.png"));
        //lblImagen2.setIcon(new ImageIcon("assets/sheet.png"));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        lblAsignatura = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        lblPeso = new javax.swing.JLabel();
        chbxTrabajoAdic = new javax.swing.JCheckBox();
        txtAsignatura = new javax.swing.JTextField();
        txtTitulo = new javax.swing.JTextField();
        rdbtnTodos = new javax.swing.JRadioButton();
        rdbtnSeleccionar = new javax.swing.JRadioButton();
        lblTituloGrande = new javax.swing.JLabel();
        txtPeso = new javax.swing.JTextField();
        panelTabla = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        lblTrimestre = new javax.swing.JLabel();
        comboTrimestre = new javax.swing.JComboBox<>();
        txtFecha = new javax.swing.JTextField();
        lblFecha = new javax.swing.JLabel();
        lblCompetencias = new javax.swing.JLabel();
        lblDescripcion = new javax.swing.JLabel();
        lblComAsig = new javax.swing.JLabel();
        descripcion = new javax.swing.JTextArea();
        filler24 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 40), new java.awt.Dimension(0, 40), new java.awt.Dimension(32767, 40));
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaComAsig = new javax.swing.JList<>();
        filler17 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        filler22 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        filler29 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 40), new java.awt.Dimension(0, 40), new java.awt.Dimension(32767, 40));
        filler30 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        lblAlumnos = new javax.swing.JLabel();
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 50), new java.awt.Dimension(0, 50), new java.awt.Dimension(32767, 50));
        filler26 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        filler27 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        filler31 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 15), new java.awt.Dimension(0, 15), new java.awt.Dimension(32767, 15));
        filler32 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5), new java.awt.Dimension(32767, 5));
        filler33 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 100), new java.awt.Dimension(0, 100), new java.awt.Dimension(32767, 100));
        filler34 = new javax.swing.Box.Filler(new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 32767));
        jSeparator1 = new javax.swing.JSeparator();
        filler35 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        filler36 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 40), new java.awt.Dimension(0, 40), new java.awt.Dimension(32767, 40));
        filler37 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 32767));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        lblEtiqueta = new javax.swing.JLabel();
        txtEtiqueta = new javax.swing.JTextField();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(60, 0), new java.awt.Dimension(60, 0), new java.awt.Dimension(60, 32767));
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(200, 0), new java.awt.Dimension(200, 0), new java.awt.Dimension(200, 32767));
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 32767));
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        txtSubtitulo = new javax.swing.JTextArea();
        filler10 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 40), new java.awt.Dimension(0, 40), new java.awt.Dimension(32767, 40));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nueva tarea");
        setBounds(new java.awt.Rectangle(300, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon("C:\\Users\\lucia\\Desktop\\NoName\\assets\\Cancelar.png")); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(btnCancelar, gridBagConstraints);

        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon("C:\\Users\\lucia\\Desktop\\NoName\\assets\\Disquete.png")); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 17;
        gridBagConstraints.gridy = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(btnGuardar, gridBagConstraints);

        lblAsignatura.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblAsignatura.setText("Asignatura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblAsignatura, gridBagConstraints);

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblTitulo.setText("Título:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblTitulo, gridBagConstraints);

        lblPeso.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblPeso.setText("Peso (%):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        getContentPane().add(lblPeso, gridBagConstraints);

        chbxTrabajoAdic.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        chbxTrabajoAdic.setText("Es recuperación");
        chbxTrabajoAdic.setToolTipText("Haga clic aquí si este trabajo no tiene peso en la nota final");
        chbxTrabajoAdic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbxTrabajoAdicActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        getContentPane().add(chbxTrabajoAdic, gridBagConstraints);

        txtAsignatura.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtAsignatura.setEnabled(false);
        txtAsignatura.setMaximumSize(new java.awt.Dimension(100, 22));
        txtAsignatura.setMinimumSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(txtAsignatura, gridBagConstraints);

        txtTitulo.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtTitulo.setMinimumSize(new java.awt.Dimension(100, 22));
        txtTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTituloKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(txtTitulo, gridBagConstraints);

        rdbtnTodos.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        rdbtnTodos.setSelected(true);
        rdbtnTodos.setText("Todos los alumnos");
        rdbtnTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnTodosActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(rdbtnTodos, gridBagConstraints);

        rdbtnSeleccionar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        rdbtnSeleccionar.setText("Seleccionar alumnos");
        rdbtnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnSeleccionarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(rdbtnSeleccionar, gridBagConstraints);

        lblTituloGrande.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        lblTituloGrande.setText("Crear una nueva tarea o prueba");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(lblTituloGrande, gridBagConstraints);

        txtPeso.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtPeso.setMinimumSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        getContentPane().add(txtPeso, gridBagConstraints);

        panelTabla.setMinimumSize(new java.awt.Dimension(300, 200));
        panelTabla.setLayout(new javax.swing.BoxLayout(panelTabla, javax.swing.BoxLayout.LINE_AXIS));

        tabla.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellidos", "Nombre", "Seleccionar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(2).setResizable(false);
        }

        panelTabla.add(jScrollPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 14;
        getContentPane().add(panelTabla, gridBagConstraints);

        lblTrimestre.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblTrimestre.setText("Trimestre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblTrimestre, gridBagConstraints);

        comboTrimestre.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        comboTrimestre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1º", "2º", "3º" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        getContentPane().add(comboTrimestre, gridBagConstraints);

        txtFecha.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtFecha.setMinimumSize(new java.awt.Dimension(100, 22));
        txtFecha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaFocusLost(evt);
            }
        });
        txtFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtFechaMousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(txtFecha, gridBagConstraints);

        lblFecha.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblFecha.setText("Fecha:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblFecha, gridBagConstraints);

        lblCompetencias.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblCompetencias.setText("Competencias de la prueba:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(lblCompetencias, gridBagConstraints);

        lblDescripcion.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblDescripcion.setText("Descripción:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 25;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(lblDescripcion, gridBagConstraints);

        lblComAsig.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblComAsig.setText("Seleccionar competencias deseadas:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(lblComAsig, gridBagConstraints);

        descripcion.setColumns(20);
        descripcion.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        descripcion.setRows(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 26;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        getContentPane().add(descripcion, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 13;
        getContentPane().add(filler24, gridBagConstraints);

        listaComAsig.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        listaComAsig.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        listaComAsig.setToolTipText("Selecciona varias competencias con Ctrl+Clic");
        listaComAsig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaComAsigMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listaComAsig);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 32;
        getContentPane().add(filler17, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 31;
        getContentPane().add(filler22, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 34;
        gridBagConstraints.gridwidth = 16;
        getContentPane().add(filler29, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 35;
        getContentPane().add(filler30, gridBagConstraints);

        lblAlumnos.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        lblAlumnos.setText("Alumnos asignados a la prueba:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(lblAlumnos, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 15;
        getContentPane().add(filler9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 3;
        getContentPane().add(filler26, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridheight = 3;
        getContentPane().add(filler27, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 13;
        getContentPane().add(filler31, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 8;
        getContentPane().add(filler32, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 24;
        getContentPane().add(filler33, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 16;
        getContentPane().add(filler2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        getContentPane().add(filler34, gridBagConstraints);

        jSeparator1.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 19;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 31;
        getContentPane().add(filler35, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 32;
        gridBagConstraints.gridwidth = 11;
        getContentPane().add(filler36, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 5;
        getContentPane().add(filler37, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        getContentPane().add(filler5, gridBagConstraints);

        lblEtiqueta.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblEtiqueta.setText("Etiqueta:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblEtiqueta, gridBagConstraints);

        txtEtiqueta.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtEtiqueta.setMinimumSize(new java.awt.Dimension(100, 22));
        txtEtiqueta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEtiquetaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(txtEtiqueta, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 7;
        getContentPane().add(filler4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        getContentPane().add(filler8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        getContentPane().add(filler3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 30;
        getContentPane().add(filler1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 25;
        getContentPane().add(filler6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 24;
        getContentPane().add(filler7, gridBagConstraints);

        txtSubtitulo.setEditable(false);
        txtSubtitulo.setColumns(20);
        txtSubtitulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSubtitulo.setRows(2);
        txtSubtitulo.setText("Cree una nueva tarea o una nueva prueba rellenando el formulario.\nPara seleccionar varias competencias, haga clic en la lista manteniendo pulsado Ctrl.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(txtSubtitulo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        getContentPane().add(filler10, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void rdbtnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnSeleccionarActionPerformed
        tabla.setEnabled(true);
        seleccionarTodaTabla(false);
    }//GEN-LAST:event_rdbtnSeleccionarActionPerformed

    private void cargarTabla() {
        DefaultTableModel model = (DefaultTableModel) tabla.getModel(); //modelo para introducir filas en la tabla
        if (model.getRowCount() == 0) {
            model.setRowCount(0);

            //Rellenar tabla
            Object[] row = new Object[3];

            //TODO esto solo se rellena si se le da al botón cargar tabla
            for (Alumno alumno : contAlumnos.getAlumnosAsignatura().get(asignatura)) {
                row[0] = alumno.getNombre();
                row[1] = alumno.getApellidos();
                model.addRow(row);
            }
        }
    }
    private void rdbtnTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnTodosActionPerformed
        tabla.setEnabled(false);
        seleccionarTodaTabla(true);
    }//GEN-LAST:event_rdbtnTodosActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int continuar = 0;
        boolean salir = true;
        if (!txtPeso.getText().equals("") || chbxTrabajoAdic.isSelected()) {
            if (!txtTitulo.getText().equals("") && !txtEtiqueta.getText().equals("")) {
                int peso = !chbxTrabajoAdic.isSelected() ? Integer.parseInt(String.valueOf(txtPeso.getText().charAt(0))) : 0;
                int trimestre = Integer.parseInt(String.valueOf(comboTrimestre.getSelectedItem().toString().charAt(0)));
                //validamos que la fecha tiene el formato correcto

                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                dateFormat.setLenient(false);

                try {
                    dateFormat.parse(txtFecha.getText().trim());
                    ArrayList competencias = recogerCompetencias();
                    if (competencias.isEmpty()) {
                        String dialog = "¿Seguro que quiere crear una prueba sin competencias? \nLas competencias no se podrán modificar más adelante.";
                        continuar = JOptionPane.showConfirmDialog(null, dialog, "Confirmar creación", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    }
                    if (continuar == 0) {
                        Prueba p = new Prueba(asignatura, txtTitulo.getText(), txtEtiqueta.getText(), txtFecha.getText(), trimestre, peso, competencias);
                        //hacer commit también en competenciasPorPrueba y guardar eso en algun sitio --> controladorPrueba.competenciasPrueba

                        contPruebas.añadirPruebaAAsignatura(p, trimestre, asignatura);
                        try {
                            p.setIdPrueba(p.commitNuevaPrueba());
                            p.commitCompetencias();
                            //Recoger a los alumnos que han sido seleccionados
                            //Crear notas vacías para ellos con comentario ("No tiene que hacer la prueba")
                            for (int i = 0; i < tabla.getRowCount(); i++) {
                                if (tabla.getValueAt(i, 2).toString().equals("false")) {
                                    ArrayList<Nota> notasActuales = contAlumnos.getAlumnosAsignatura().get(asignatura).get(i).getNotas();
                                    notasActuales.add(new Nota(p.getIdPrueba(), 0, "No tiene que hacer la prueba"));
                                    contAlumnos.getAlumnosAsignatura().get(asignatura).get(i).setNotas(notasActuales);
                                    contAlumnos.updateNotas(asignatura, p.getIdPrueba(), contAlumnos.getAlumnosAsignatura().get(asignatura).get(i), false);
                                }
                            }
                        } catch (SQLException e) {
                            AuxiliarMethods.showWarning("No se ha podido introducir la prueba en la base de datos. Por favor, contacte con un administrador. \nMás detalles: " + e.toString());
                            salir = false;
                        }

                    }
                } catch (ParseException pe) {
                    AuxiliarMethods.showWarning("Introduzca una fecha válida.\nFormato: dd/mm/aaaa");
                    salir = false;
                }

            } else {
                AuxiliarMethods.showWarning("Si la prueba no tiene peso, seleccione Es recuperación.");
                salir = false;
            }
        } else {
            AuxiliarMethods.showWarning("Por favor, rellene todos los datos de la nueva prueba.");
            salir = false;
        }

        if (salir) {
            this.dispose();
        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtFechaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFechaMousePressed
        // TODO add your handling code here:
        if (!presionado) {
            txtFecha.setText("");
            presionado = true;
        }
    }//GEN-LAST:event_txtFechaMousePressed

    private void txtFechaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaFocusLost
        // TODO add your handling code here:
        if (txtFecha.getText().equals("")) {
            getDate();
        }
    }//GEN-LAST:event_txtFechaFocusLost

    private void listaComAsigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaComAsigMouseClicked
        listaComAsig = (JList) evt.getSource();

        for (Competencia c1 : contCompetencias.getCompetenciasAsignatura().get(asignatura)) {
            try {
                if (c1.getIdCompetencia() == competenciaConID.get(modeloAsig.get(listaComAsig.getSelectedIndex()))) {
                    descripcion.setText(c1.getDescripcion());
                }
            } catch (ArrayIndexOutOfBoundsException e) {
                descripcion.setText(c1.getDescripcion());
            }
        }
    }//GEN-LAST:event_listaComAsigMouseClicked

    private void txtTituloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTituloKeyReleased
        //lblNombrePrueba.setText(txtTitulo.getText());
        lblCompetencias.setText("Competencias de " + txtTitulo.getText() + ":");
        lblAlumnos.setText("Alumnos asignados a " + txtTitulo.getText() + ":");
    }//GEN-LAST:event_txtTituloKeyReleased

    private void chbxTrabajoAdicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbxTrabajoAdicActionPerformed
        if (!chbxTrabajoAdic.isSelected()) {
            txtPeso.setText("");
            txtPeso.setEnabled(true);
        } else {
            txtPeso.setText("0");
            txtPeso.setEnabled(false);
        }
    }//GEN-LAST:event_chbxTrabajoAdicActionPerformed

    private void txtEtiquetaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEtiquetaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEtiquetaKeyReleased

    private void getDate() {
        //Rellenamos el campo de fecha por defecto con la fecha de hoy para que sepan el formato
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date();
        txtFecha.setText(formatter.format(date));
    }

    private void cargarCompetencias() {
        try {
            contCompetencias.cargarCompetenciasAsignatura(asignatura);
        } catch (SQLException e) {
            System.out.println(e.toString());
        }

        for (int i = 0; i < contCompetencias.getCompetenciasAsignatura().get(asignatura).size(); i++) {
            modeloAsig.addElement(contCompetencias.getCompetenciasAsignatura().get(asignatura).get(i).getNombre());
            competenciaConID.put(contCompetencias.getCompetenciasAsignatura().get(asignatura).get(i).getNombre(), contCompetencias.getCompetenciasAsignatura().get(asignatura).get(i).getIdCompetencia());
        }
    }

    private void seleccionarTodaTabla(boolean seleccionar) {
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        for (int i = 0; i < tabla.getRowCount(); i++) {
            model.setValueAt(seleccionar, i, 2);
        }
    }

    public ArrayList recogerCompetencias() {
        ArrayList<Integer> listaCompetencias = new ArrayList<>();
        int[] seleccionadas = listaComAsig.getSelectedIndices();
        for (int i = 0; i < seleccionadas.length; i++) {
            listaCompetencias.add(competenciaConID.get(modeloAsig.get(seleccionadas[i])));
        }
        return listaCompetencias;
    }

    private void ejecutarOpciones() {
        List<Component> components = AuxiliarMethods.getAllComponents(this);

        for (Component c : components) {
            c.setFont(new Font(c.getFont().getName(), c.getFont().getStyle(), opciones.getTamañoLetra()));
            if (opciones.getOscuro() && c.getClass() != JButton.class && c.getClass() != JTextField.class && c.getClass() != JComboBox.class) {
                c.setForeground(Color.LIGHT_GRAY);
            }
        }

        lblCompetencias.setFont(new Font(lblCompetencias.getFont().getName(), Font.PLAIN, opciones.getTamañoLetra() + 6));
        txtSubtitulo.setFont(new Font(txtSubtitulo.getFont().getName(), Font.PLAIN, opciones.getTamañoLetra() +2));
        //lblNombrePrueba.setFont(new Font(lblNombrePrueba.getFont().getName(), Font.PLAIN, opciones.getTamañoLetra() + 6));
        lblTituloGrande.setFont(new Font(lblTituloGrande.getFont().getName(), Font.BOLD, opciones.getTamañoLetra() + 15));
        lblAlumnos.setFont(new Font(lblAlumnos.getFont().getName(), Font.PLAIN, opciones.getTamañoLetra() + 6));

        //cambiar el fondo de los containers
        Color colorBackground = opciones.getColorBackground();
        this.getContentPane().setBackground(colorBackground);
        //listaComAsig.setBackground(colorBackground);
        txtSubtitulo.setBackground(colorBackground);
        descripcion.setBackground(colorBackground);
        tabla.setBackground(colorBackground);
        jScrollPane.setBackground(colorBackground);
        jPanel1.setBackground(colorBackground);
        rdbtnSeleccionar.setBackground(colorBackground);
        rdbtnTodos.setBackground(colorBackground);
        chbxTrabajoAdic.setBackground(colorBackground);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JCheckBox chbxTrabajoAdic;
    private javax.swing.JComboBox<String> comboTrimestre;
    private javax.swing.JTextArea descripcion;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler10;
    private javax.swing.Box.Filler filler17;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler22;
    private javax.swing.Box.Filler filler24;
    private javax.swing.Box.Filler filler26;
    private javax.swing.Box.Filler filler27;
    private javax.swing.Box.Filler filler29;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler30;
    private javax.swing.Box.Filler filler31;
    private javax.swing.Box.Filler filler32;
    private javax.swing.Box.Filler filler33;
    private javax.swing.Box.Filler filler34;
    private javax.swing.Box.Filler filler35;
    private javax.swing.Box.Filler filler36;
    private javax.swing.Box.Filler filler37;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.Box.Filler filler9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAlumnos;
    private javax.swing.JLabel lblAsignatura;
    private javax.swing.JLabel lblComAsig;
    private javax.swing.JLabel lblCompetencias;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblEtiqueta;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblPeso;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTituloGrande;
    private javax.swing.JLabel lblTrimestre;
    private javax.swing.JList<String> listaComAsig;
    private javax.swing.JPanel panelTabla;
    private javax.swing.JRadioButton rdbtnSeleccionar;
    private javax.swing.JRadioButton rdbtnTodos;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtAsignatura;
    private javax.swing.JTextField txtEtiqueta;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextArea txtSubtitulo;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
